name: CD

on:
  pull_request:
    branches: [main]
    types: [closed]

# Every job is skipped if PR is labelled "automated-revert"  
jobs:
  # Removing docker image if PR was closed but not merged
  remove-docker-image:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'automated-revert') }} && ${{ github.event.pull_request.merged }} == false
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Remove Docker Image from registry
        run: |
          TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "${{ secrets.DOCKERHUB_USERNAME }}", "password": "${{ secrets.DOCKERHUB_PASSWORD }}"}' https://hub.docker.com/v2/users/login/ | jq -r .token)
          curl -X DELETE -H "Authorization: JWT $TOKEN" https://hub.docker.com/v2/repositories/${{ vars.IMAGE_NAME }}/tags/${{ github.event.pull_request.head.sha }}

  # Deploying both preview and production if it comes from dependabot because there's no need to approve it
  deploy-all:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'automated-revert') }} && ${{ github.event.pull_request.merged }} && ${{ github.event.pull_request.user.login }} == 'dependabot[bot]'
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Replace Docker image with :latest tag
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          # Creating new :latest image based on the :{github.event.pull_request.head.sha} image
          docker pull ${{ vars.IMAGE_NAME }}:${{ github.event.pull_request.head.sha }}
          docker tag ${{ vars.IMAGE_NAME }}:${{ github.event.pull_request.head.sha }} ${{ vars.IMAGE_NAME }}:latest
          docker push ${{ vars.IMAGE_NAME }}:latest
          docker logout
          # Removing :{github.event.pull_request.head.sha} image from Registry
          TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "${{ secrets.DOCKERHUB_USERNAME }}", "password": "${{ secrets.DOCKERHUB_PASSWORD }}"}' https://hub.docker.com/v2/users/login/ | jq -r .token)
          curl -X DELETE -H "Authorization: JWT $TOKEN" https://hub.docker.com/v2/repositories/${{ vars.IMAGE_NAME }}/tags/${{ github.event.pull_request.head.sha }}

      - name: Deploy preview and production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            cd ./krustberry.xyz
            export PREVIEW_IMAGE=${{ vars.IMAGE_NAME }}:latest
            export PRODUCTION_IMAGE=${{ vars.IMAGE_NAME }}:latest
            docker compose down preview production
            docker compose up traefik preview production -d --no-recreate

  # Otherwise deploying only preview with release approval through Slack
  deploy-preview:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'automated-revert') }} && ${{ github.event.pull_request.merged }} == true
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Deploy preview version
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            cd ./krustberry.xyz
            export PREVIEW_IMAGE=${{ vars.IMAGE_NAME }}:${{ github.event.pull_request.head.sha }}
            docker compose down preview
            docker compose up traefik preview -d --no-recreate
            
      - name: Send Slack notification for production approval
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ vars.SLACK_APPROVAL_CHANNEL_ID }}
            text: "New release request"
            blocks:
              - type: "header"
                text:
                  type: "plain_text"
                  text: "New release request"
              - type: "divider"
              - type: "section"
                fields:
                  - type: "mrkdwn"
                    text: "*Commit ID:*\n${{ github.event.pull_request.head.sha }}"
                  - type: "mrkdwn"
                    text: "*When:*\n${{ github.event.pull_request.merged_at }}"
              - type: "section"
                fields:
                  - type: "mrkdwn"
                    text: "*Created by:*\n<${{ github.event.pull_request.user.html_url }}|@${{ github.event.pull_request.user.login }}>"
                  - type: "mrkdwn"
                    text: "*Merged by:*\n<${{ github.event.pull_request.merged_by.html_url }}|@${{ github.event.pull_request.merged_by.login }}>"
              - type: "divider"
              - type: "rich_text"
                elements:
                  - type: "rich_text_quote"
                    elements:
                      - type: "text"
                        text: "Please notice it might take a moment to complete the action. Message will be updated once the action is done."
              - type: "actions"
                elements:
                  - type: "button"
                    text:
                      type: "plain_text"
                      text: "Approve"
                    action_id: "approve_production_deploy"
                    value: "${{ github.event.pull_request.head.sha }}"
                    style: "primary"
                    confirm:
                      title:
                        type: "plain_text"
                        text: "Are you sure?"
                      text:
                        type: "plain_text"
                        text: "Release the version to production? Action cannot be undone unless reverted manually"
                      confirm:
                        type: "plain_text"
                        text: "Release"
                      deny:
                        type: "plain_text"
                        text: "Close"
                  - type: "button"
                    text:
                      type: "plain_text"
                      text: "Reject"
                    action_id: "reject_production_deploy"
                    value: "${{ github.event.pull_request.head.sha }}"
                    style: "danger"
                    confirm:
                      title:
                        type: "plain_text"
                        text: "Are you sure?"
                      text:
                        type: "plain_text"
                        text: "By rejecting this release preview is going to be returned to the latest release"
                      style: "danger"
                      confirm:
                        type: "plain_text"
                        text: "Reject"
                      deny:
                        type: "plain_text"
                        text: "Close"

  always-run:
    needs: [remove-docker-image, deploy-all, deploy-preview]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Always run
        run: echo "This step always runs"
