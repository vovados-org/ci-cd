name: Approve Release

on:
  workflow_dispatch:
    inputs:
      sha:
        type: "string"
        description: "PR sha"
        required: true
      number:
        type: "number"
        description: "PR number"
        required: true
      ts:
        type: "string"
        description: "Slack Message ID"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Replace Docker image with latest tag
        run: |
          # Creating another image with the :latest tag based on the image with the :${inputs_sha} tag
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker pull ${{ vars.IMAGE_NAME }}:${{ inputs.sha }}
          docker tag ${{ vars.IMAGE_NAME }}:${{ inputs.sha }} ${{ vars.IMAGE_NAME }}:latest
          docker push ${{ vars.IMAGE_NAME }}:latest
          docker logout

          # Removing image with the :{inputs.sha} tag from Docker Registry
          TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "${{ secrets.DOCKERHUB_USERNAME }}", "password": "${{ secrets.DOCKERHUB_PASSWORD }}"}' https://hub.docker.com/v2/users/login/ | jq -r .token)
          curl -X DELETE -H "Authorization: JWT $TOKEN" https://hub.docker.com/v2/repositories/${{ vars.IMAGE_NAME }}/tags/${{ inputs.sha }}

      - name: Undeploy preview and deploy production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            cd ./krustberry.xyz
            docker compose -p ${{ inputs.sha }} down preview
            docker compose -p latest up traefik -d --no-recreate
            docker compose -p latest up production -d

      - name: Merge pull request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.pulls.merge({
              pull_number: ${{ inputs.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              merge_method: 'merge'
            })

      - name: Remove in-preview label and add approved label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.removeLabel({
              issue_number: ${{ inputs.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'in-preview'
            })

            await github.rest.issues.addLabels({
              issue_number: ${{ inputs.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['approved']
            })

  send-notifications:
    runs-on: ubuntu-latest
    steps:
      - name: Update Slack notification about successful production deployment
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.update
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ vars.SLACK_APPROVAL_CHANNEL_ID }}
            ts: "${{ inputs.ts }}"
            text: "âœ… Release has approved."

      - name: Post comment about canceling preview
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              issue_number: ${{ inputs.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "âœ… The release has been approved and deployed to production. The pull request has been merged, and the preview version has been undeployed."
            })

      - name: Send Slack notification about the new release
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ vars.SLACK_RELEASES_CHANNEL_ID }}
            text: "ðŸŽ‰ New version has been released."
