name: CD - Release Approval

on:
  workflow_dispatch:
    inputs:
      sha:
        type: "string"
        description: "Commit ID"
        required: true
      ts:
        type: "string"
        description: "Slack Message ID"
        required: true

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    steps:
      - name: Replace Docker image with :latest tag
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker tag ${{ vars.IMAGE_NAME }}/${{ inputs.sha }} ${{ vars.IMAGE_NAME }}:latest
          docker logout

      - name: Deploy production version
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            cd ./krustberry.xyz
            export PRODUCTION_IMAGE=${{ vars.IMAGE_NAME }}:latest
            docker compose down production
            docker compose up traefik production -d --no-recreate

      - name: Update Slack notification about successful production deployment
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.update
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            ts: "${{ inputs.ts }}"
            text: "âœ… Release has been deployed to production"

      - name: Send Slack notification about the new release
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ vars.SLACK_RELEASES_CHANNEL_ID }}
            text: "ðŸŽ‰ New version has been released"
